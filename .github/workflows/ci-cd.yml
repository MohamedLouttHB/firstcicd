name: Project CI/CD Flow

on:
  push:
    branches:
      - testgit

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up the Java Development Kit (JDK)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
          cache: maven

      # Build the project and skip tests
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Archive the build artifacts (JAR file)
      - name: Archive JAR file
        uses: actions/upload-artifact@v3
        with:
          name: built-jar
          path: target/*.jar

  deploy-docker:
    runs-on: ubuntu-latest
    needs: build-test  # Ensure the build-test job completes successfully before running this job

    steps:
      # Checkout the code again, since each job runs in a fresh environment
      - name: Checkout code
        uses: actions/checkout@v3

      # Download the JAR file artifact
      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: built-jar
          path: target

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Build the Docker image
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/secpipe:latest .

      # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/secpipe:latest
